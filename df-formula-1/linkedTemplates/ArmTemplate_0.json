{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "df-formula-1"
		},
		"dataLake_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'dataLake'"
		},
		"dataLake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://sadlformula1.dfs.core.windows.net/"
		},
		"ergast_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{concat('https://ergast.com/api/f1/', linkedService().endPoint, '.', linkedService().fileType, '?limit=', linkedService().limit, '&offset=', linkedService().offset)}"
		},
		"keyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kv-formula-1-secrets.vault.azure.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/dataLake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('dataLake_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('dataLake_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ergast')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"limit": {
						"type": "string"
					},
					"endPoint": {
						"type": "string"
					},
					"fileType": {
						"type": "string"
					},
					"offset": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('ergast_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/keyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('keyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/datalake_directory')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"directory": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().directory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/datalake_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ergast')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ergast",
					"type": "LinkedServiceReference",
					"parameters": {
						"limit": {
							"value": "@dataset().limit",
							"type": "Expression"
						},
						"endPoint": {
							"value": "@dataset().endPoint",
							"type": "Expression"
						},
						"fileType": "json",
						"offset": {
							"value": "@dataset().offset",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"limit": {
						"type": "string"
					},
					"endPoint": {
						"type": "string"
					},
					"offset": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ergast')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/01 - Stage Full Datasets')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set Total Records",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get First Page",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "totalRecords",
							"value": {
								"value": "@activity('Get First Page').output.MRData.total",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get First Page",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://ergast.com/api/f1/', pipeline().parameters.endPoint, '.', pipeline().parameters.fileType, '?limit=', variables('limit'), '&offset=', variables('offset'))",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						}
					},
					{
						"name": "Set Page Number",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "pageNo",
							"value": {
								"value": "@pipeline().parameters.startPageNo",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Save Page 1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Page Number",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Total Records",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Destination",
								"value": "@{pipeline().globalParameters.bronze_containername}//@{concat(pipeline().parameters.directory, '/', pipeline().parameters.time, '_', variables('pageNo'), '.', pipeline().parameters.fileType)}"
							}
						],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ergast",
								"type": "DatasetReference",
								"parameters": {
									"limit": {
										"value": "@variables('limit')",
										"type": "Expression"
									},
									"endPoint": {
										"value": "@pipeline().parameters.endPoint",
										"type": "Expression"
									},
									"offset": {
										"value": "@variables('offset')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "datalake_file",
								"type": "DatasetReference",
								"parameters": {
									"container": {
										"value": "@pipeline().globalParameters.bronze_containername",
										"type": "Expression"
									},
									"fileName": {
										"value": "@concat(pipeline().parameters.directory, replace(pipeline().parameters.endPoint, '/', '-'), '_', variables('pageNo'), '.', pipeline().parameters.fileType)",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Until End Of API",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Save Page 1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(add(int(variables('prevOffset')), int(variables('limit'))), int(variables('totalRecords')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set Previous Offset",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "prevOffset",
										"value": {
											"value": "@variables('offset')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Previous Page Number",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "prevPageNo",
										"value": {
											"value": "@variables('pageNo')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Update Offset",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Previous Offset",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "offset",
										"value": {
											"value": "@string(add(int(variables('prevOffset')), int(variables('limit'))))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Update Page Number",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Previous Page Number",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "pageNo",
										"value": {
											"value": "@string(add(int(variables('prevPageNo')), int('1')))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "If Not End Of API",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Update Offset",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Update Page Number",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@less(int(variables('offset')), int(variables('totalRecords')))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Stage Data",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 1,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "RestSource",
														"httpRequestTimeout": "00:01:40",
														"requestInterval": "00.00:00:00.010",
														"requestMethod": "GET",
														"paginationRules": {
															"supportRFC5988": "true"
														}
													},
													"sink": {
														"type": "JsonSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "JsonWriteSettings"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "ergast",
														"type": "DatasetReference",
														"parameters": {
															"limit": {
																"value": "@variables('limit')",
																"type": "Expression"
															},
															"endPoint": {
																"value": "@pipeline().parameters.endPoint",
																"type": "Expression"
															},
															"offset": {
																"value": "@variables('offset')",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "datalake_file",
														"type": "DatasetReference",
														"parameters": {
															"container": {
																"value": "@pipeline().globalParameters.bronze_containername",
																"type": "Expression"
															},
															"fileName": {
																"value": "@concat(pipeline().parameters.directory, replace(pipeline().parameters.endPoint, '/', '-'), '_', variables('pageNo'), '.', pipeline().parameters.fileType)",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"directory": {
						"type": "string"
					},
					"startPageNo": {
						"type": "string"
					},
					"endPoint": {
						"type": "string"
					},
					"fileType": {
						"type": "string"
					},
					"time": {
						"type": "string"
					}
				},
				"variables": {
					"pageNo": {
						"type": "String"
					},
					"directory": {
						"type": "String"
					},
					"limit": {
						"type": "String",
						"defaultValue": "1000"
					},
					"prevOffset": {
						"type": "String",
						"defaultValue": "0"
					},
					"prevPageNo": {
						"type": "String",
						"defaultValue": "0"
					},
					"offset": {
						"type": "String",
						"defaultValue": "0"
					},
					"totalRecords": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Bronze"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ergast')]",
				"[concat(variables('factoryId'), '/datasets/datalake_file')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/03 - Get Race Number')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get File Contents",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "datalake_file",
								"type": "DatasetReference",
								"parameters": {
									"container": {
										"value": "@pipeline().globalParameters.bronze_containername",
										"type": "Expression"
									},
									"fileName": {
										"value": "@concat(pipeline().parameters.seasonsDirectory, '/', pipeline().parameters.seasonsFilename)",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Set years Array",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get File Contents",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "years",
							"value": {
								"value": "@activity('Get File Contents').output.firstRow.MRData.SeasonTable.Seasons",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Year",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set years Array",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Destination Directory",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('years')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Stage Race Data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 1,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Destination",
											"value": "@{pipeline().globalParameters.bronze_containername}//@{concat(variables('destinationDirectory'), item().season, '_1.json')}"
										},
										{
											"name": "Year",
											"value": "@item().season"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ergast",
											"type": "DatasetReference",
											"parameters": {
												"limit": "1000",
												"endPoint": {
													"value": "@item().season",
													"type": "Expression"
												},
												"offset": "0"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "datalake_file",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@pipeline().globalParameters.bronze_containername",
													"type": "Expression"
												},
												"fileName": {
													"value": "@concat(variables('destinationDirectory'), '/', item().season, '_1.json')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Set Destination Directory",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "destinationDirectory",
							"value": {
								"value": "@replace(pipeline().parameters.seasonsDirectory, 'seasons', 'schedule')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"seasonsFilename": {
						"type": "string"
					},
					"seasonsDirectory": {
						"type": "string"
					}
				},
				"variables": {
					"years": {
						"type": "Array"
					},
					"destinationDirectory": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Bronze"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/datalake_file')]",
				"[concat(variables('factoryId'), '/datasets/ergast')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/04 - Stage Laps Dataset')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "For Each Race",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.races",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Stage Full Datasets",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "01 - Stage Full Datasets",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"directory": {
												"value": "@pipeline().parameters.directory",
												"type": "Expression"
											},
											"startPageNo": "1",
											"endPoint": {
												"value": "@concat(pipeline().parameters.year, '/', item().round, '/laps')",
												"type": "Expression"
											},
											"fileType": "json",
											"time": {
												"value": "@pipeline().parameters.time",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"races": {
						"type": "array"
					},
					"directory": {
						"type": "string"
					},
					"time": {
						"type": "string"
					},
					"year": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Bronze"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/01 - Stage Full Datasets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/04 - Stage Pitstop Dataset')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "For Each Race",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.races",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Stage Full Datasets",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "01 - Stage Full Datasets",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"directory": {
												"value": "@pipeline().parameters.directory",
												"type": "Expression"
											},
											"startPageNo": "1",
											"endPoint": {
												"value": "@concat(pipeline().parameters.year, '/', item().round, '/laps')",
												"type": "Expression"
											},
											"fileType": "json",
											"time": {
												"value": "@pipeline().parameters.time",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"directory": {
						"type": "string"
					},
					"year": {
						"type": "string"
					},
					"time": {
						"type": "string"
					},
					"races": {
						"type": "array"
					}
				},
				"folder": {
					"name": "Bronze"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/01 - Stage Full Datasets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/04 - Get Race Laps')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If After 1995",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(int(pipeline().parameters.year), 1996)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Set races Array",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get Race Schedule for a Season",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "races",
										"value": {
											"value": "@activity('Get Race Schedule for a Season').output.firstRow.MRData.RaceTable.Races",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Destination Directory",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "destinationDirectory",
										"value": {
											"value": "@replace(pipeline().parameters.seasonsDirectory, 'seasons', 'laps')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Get Race Schedule for a Season",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"dataset": {
											"referenceName": "datalake_file",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@pipeline().globalParameters.bronze_containername",
													"type": "Expression"
												},
												"fileName": {
													"value": "@concat(replace(pipeline().parameters.seasonsDirectory, 'seasons', 'schedule'), '/', pipeline().parameters.year, '_1.json')",
													"type": "Expression"
												}
											}
										}
									}
								},
								{
									"name": "Stage Laps Dataset",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Set races Array",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Set Destination Directory",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "04 - Stage Laps Dataset",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"races": {
												"value": "@variables('races')",
												"type": "Expression"
											},
											"directory": {
												"value": "@variables('destinationDirectory')",
												"type": "Expression"
											},
											"time": {
												"value": "@pipeline().parameters.time",
												"type": "Expression"
											},
											"year": {
												"value": "@pipeline().parameters.year",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"seasonsDirectory": {
						"type": "string"
					},
					"year": {
						"type": "string"
					},
					"time": {
						"type": "string"
					}
				},
				"variables": {
					"races": {
						"type": "Array"
					},
					"destinationDirectory": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Bronze"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/datalake_file')]",
				"[concat(variables('factoryId'), '/pipelines/04 - Stage Laps Dataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/04 - Get Race Pitstops')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If After 2011",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(int(pipeline().parameters.year), 2012)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Set races Array",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get Race Schedule for a Season",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "races",
										"value": {
											"value": "@activity('Get Race Schedule for a Season').output.firstRow.MRData.RaceTable.Races",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Destination Directory",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "destinationDirectory",
										"value": {
											"value": "@replace(pipeline().parameters.seasonsDirectory, 'seasons', 'laps')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Get Race Schedule for a Season",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"dataset": {
											"referenceName": "datalake_file",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@pipeline().globalParameters.bronze_containername",
													"type": "Expression"
												},
												"fileName": {
													"value": "@concat(replace(pipeline().parameters.seasonsDirectory, 'seasons', 'schedule'), '/', pipeline().parameters.year, '_1.json')",
													"type": "Expression"
												}
											}
										}
									}
								},
								{
									"name": "Stage Pitstop Dataset",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Set races Array",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Set Destination Directory",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "04 - Stage Pitstop Dataset",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"directory": {
												"value": "@variables('destinationDirectory')",
												"type": "Expression"
											},
											"year": {
												"value": "@pipeline().parameters.year",
												"type": "Expression"
											},
											"time": {
												"value": "@pipeline().parameters.time",
												"type": "Expression"
											},
											"races": {
												"value": "@variables('races')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"seasonsDirectory": {
						"type": "string"
					},
					"year": {
						"type": "string"
					},
					"time": {
						"type": "string"
					}
				},
				"variables": {
					"races": {
						"type": "Array"
					},
					"destinationDirectory": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Bronze"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/datalake_file')]",
				"[concat(variables('factoryId'), '/pipelines/04 - Stage Pitstop Dataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/03 - Stage Race - Lap Times - Pitstop Dataset')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get File Contents",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "datalake_file",
								"type": "DatasetReference",
								"parameters": {
									"container": {
										"value": "@pipeline().globalParameters.bronze_containername",
										"type": "Expression"
									},
									"fileName": {
										"value": "@concat(pipeline().parameters.seasonsDirectory, '/', pipeline().parameters.seasonsFilename)",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Set years Array",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get File Contents",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "years",
							"value": {
								"value": "@activity('Get File Contents').output.firstRow.MRData.SeasonTable.Seasons",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each Year",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set years Array",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Destination Directory",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('years')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Switch on Dataset",
									"type": "Switch",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@pipeline().parameters.datasetName",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "schedule",
												"activities": [
													{
														"name": "Stage Race Data",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 1,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [
															{
																"name": "Destination",
																"value": "@{pipeline().globalParameters.bronze_containername}//@{concat(variables('destinationDirectory'), item().season, '_1.json')}"
															},
															{
																"name": "Year",
																"value": "@item().season"
															}
														],
														"typeProperties": {
															"source": {
																"type": "RestSource",
																"httpRequestTimeout": "00:01:40",
																"requestInterval": "00.00:00:00.010",
																"requestMethod": "GET",
																"paginationRules": {
																	"supportRFC5988": "true"
																}
															},
															"sink": {
																"type": "JsonSink",
																"storeSettings": {
																	"type": "AzureBlobFSWriteSettings"
																},
																"formatSettings": {
																	"type": "JsonWriteSettings"
																}
															},
															"enableStaging": false
														},
														"inputs": [
															{
																"referenceName": "ergast",
																"type": "DatasetReference",
																"parameters": {
																	"limit": "1000",
																	"endPoint": {
																		"value": "@item().season",
																		"type": "Expression"
																	},
																	"offset": "0"
																}
															}
														],
														"outputs": [
															{
																"referenceName": "datalake_file",
																"type": "DatasetReference",
																"parameters": {
																	"container": {
																		"value": "@pipeline().globalParameters.bronze_containername",
																		"type": "Expression"
																	},
																	"fileName": {
																		"value": "@concat(variables('destinationDirectory'), '/', item().season, '_1.json')",
																		"type": "Expression"
																	}
																}
															}
														]
													}
												]
											},
											{
												"value": "laps",
												"activities": [
													{
														"name": "Get Laps Dataset",
														"type": "ExecutePipeline",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "04 - Get Race Laps",
																"type": "PipelineReference"
															},
															"waitOnCompletion": true,
															"parameters": {
																"seasonsDirectory": {
																	"value": "@pipeline().parameters.seasonsDirectory",
																	"type": "Expression"
																},
																"year": {
																	"value": "@item().season",
																	"type": "Expression"
																},
																"time": {
																	"value": "@pipeline().parameters.time",
																	"type": "Expression"
																}
															}
														}
													}
												]
											},
											{
												"value": "pitstops",
												"activities": [
													{
														"name": "Get Pitstop Dataset",
														"type": "ExecutePipeline",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "04 - Get Race Pitstops",
																"type": "PipelineReference"
															},
															"waitOnCompletion": true,
															"parameters": {
																"seasonsDirectory": {
																	"value": "@pipeline().parameters.seasonsDirectory",
																	"type": "Expression"
																},
																"year": {
																	"value": "@item().season",
																	"type": "Expression"
																},
																"time": {
																	"value": "@pipeline().parameters.time",
																	"type": "Expression"
																}
															}
														}
													}
												]
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Set Destination Directory",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "destinationDirectory",
							"value": {
								"value": "@replace(pipeline().parameters.seasonsDirectory, 'seasons', 'schedule')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"seasonsFilename": {
						"type": "string"
					},
					"seasonsDirectory": {
						"type": "string"
					},
					"datasetName": {
						"type": "string"
					},
					"time": {
						"type": "string"
					}
				},
				"variables": {
					"years": {
						"type": "Array"
					},
					"destinationDirectory": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Bronze"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/datalake_file')]",
				"[concat(variables('factoryId'), '/datasets/ergast')]",
				"[concat(variables('factoryId'), '/pipelines/04 - Get Race Laps')]",
				"[concat(variables('factoryId'), '/pipelines/04 - Get Race Pitstops')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/02 - Stage Reliant Datasets')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "For Each File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get File Name List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get File Name List').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Stage Race Dataset",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "03 - Stage Race - Lap Times - Pitstop Dataset",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"seasonsFilename": {
												"value": "@item().name",
												"type": "Expression"
											},
											"seasonsDirectory": {
												"value": "@pipeline().parameters.seasonsDirectory",
												"type": "Expression"
											},
											"datasetName": "schedule",
											"time": {
												"value": "@pipeline().parameters.time",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Stage Lap Times Dataset",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Stage Race Dataset",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "03 - Stage Race - Lap Times - Pitstop Dataset",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"seasonsFilename": {
												"value": "@item().name",
												"type": "Expression"
											},
											"seasonsDirectory": {
												"value": "@pipeline().parameters.seasonsDirectory",
												"type": "Expression"
											},
											"datasetName": "laps",
											"time": {
												"value": "@pipeline().parameters.time",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Stage Pitstops Dataset",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Stage Race Dataset",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "03 - Stage Race - Lap Times - Pitstop Dataset",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"seasonsFilename": {
												"value": "@item().name",
												"type": "Expression"
											},
											"seasonsDirectory": {
												"value": "@pipeline().parameters.seasonsDirectory",
												"type": "Expression"
											},
											"datasetName": "pitstops",
											"time": {
												"value": "@pipeline().parameters.time",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Get File Name List",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "datalake_directory",
								"type": "DatasetReference",
								"parameters": {
									"container": {
										"value": "@pipeline().globalParameters.bronze_containername",
										"type": "Expression"
									},
									"directory": {
										"value": "@pipeline().parameters.seasonsDirectory",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"seasonsDirectory": {
						"type": "string"
					},
					"time": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Bronze"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/datalake_directory')]",
				"[concat(variables('factoryId'), '/pipelines/03 - Stage Race - Lap Times - Pitstop Dataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/00 - Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set Year",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "year",
							"value": {
								"value": "@formatDateTime(convertTimeZone(utcNow(), 'UTC', 'New Zealand Standard Time'), 'yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Month",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "month",
							"value": {
								"value": "@formatDateTime(convertTimeZone(utcNow(), 'UTC', 'New Zealand Standard Time'), 'MM')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Day",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "day",
							"value": {
								"value": "@formatDateTime(convertTimeZone(utcNow(), 'UTC', 'New Zealand Standard Time'), 'dd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Stage Reliant Datasets",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "For Each End Point",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "02 - Stage Reliant Datasets",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"seasonsDirectory": {
									"value": "@concat(variables('year'), variables('month'), variables('day'), '_', variables('time'), '/seasons/')",
									"type": "Expression"
								},
								"time": {
									"value": "@variables('time')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Set Time",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "time",
							"value": {
								"value": "@formatDateTime(convertTimeZone(utcNow(), 'UTC', 'New Zealand Standard Time'), 'hhmmss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get End Points",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "datalake_file",
								"type": "DatasetReference",
								"parameters": {
									"container": {
										"value": "@pipeline().globalParameters.config_containername",
										"type": "Expression"
									},
									"fileName": {
										"value": "@pipeline().globalParameters.ergast_fulldatasets_filename",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Set endPoints Array",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get End Points",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "endPointsList",
							"value": {
								"value": "@activity('Get End Points').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "For Each End Point",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set endPoints Array",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Time",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Day",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Year",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Month",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('endPointsList')",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Directory",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "directory",
										"value": {
											"value": "@concat(variables('year'), variables('month'), variables('day'), '_', variables('time'), '/', item().endPoint, '/')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stage Full Datasets",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Set Directory",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [
										{
											"name": "Source",
											"value": "@{item().endPoint}"
										}
									],
									"typeProperties": {
										"pipeline": {
											"referenceName": "01 - Stage Full Datasets",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"directory": {
												"value": "@variables('directory')",
												"type": "Expression"
											},
											"startPageNo": "1",
											"endPoint": {
												"value": "@item().endPoint",
												"type": "Expression"
											},
											"fileType": "json",
											"time": {
												"value": "@variables('time')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"endPointsList": {
						"type": "Array"
					},
					"endPoint": {
						"type": "String"
					},
					"year": {
						"type": "String"
					},
					"month": {
						"type": "String"
					},
					"day": {
						"type": "String"
					},
					"time": {
						"type": "String"
					},
					"directory": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Bronze"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/02 - Stage Reliant Datasets')]",
				"[concat(variables('factoryId'), '/datasets/datalake_file')]",
				"[concat(variables('factoryId'), '/pipelines/01 - Stage Full Datasets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "00 - Master",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2023-01-25T00:00:00",
						"endTime": "2023-02-28T02:08:00",
						"timeZone": "New Zealand Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								0
							],
							"weekDays": [
								"Monday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/00 - Master')]"
			]
		}
	]
}